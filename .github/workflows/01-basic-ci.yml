name: "CI Básico"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# Variáveis de ambiente globais, disponíveis para todos os jobs
env:
  NODE_VERSION: '18'

jobs:
  # --- INÍCIO DOS JOBS DO NÍVEL 1 ---
  basic-setup:
    name: "Nível 1: Setup & Basic Checks"
    runs-on: ubuntu-latest
    
    outputs:
      node-version: ${{ steps.setup.outputs.node-version }}
    
    steps:
      - name: "Checkout do código"
        uses: actions/checkout@v4
        
      - name: "Setup Node.js"
        id: setup
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: "Informações do ambiente"
        run: |
          echo "Runner: ${{ runner.os }}"
          echo "Node.js: $(node --version)"
          echo "NPM: $(npm --version)"
          echo "Data: $(date)"
          
      - name: "Instalar dependências"
        run: |
          echo "Instalando dependências..."
          npm ci
          echo "Dependências instaladas com sucesso!"
          
  build:
    name: "Nível 1: Build da Aplicação"
    runs-on: ubuntu-latest
    needs: basic-setup
    
    steps:
      - name: "Checkout do código"
        uses: actions/checkout@v4
        
      - name: "Setup Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: ${{ needs.basic-setup.outputs.node-version }}
          cache: 'npm'
          
      - name: "Instalar dependências"
        run: npm ci
        
      - name: "Build da aplicação"
        run: |
          echo "Iniciando build..."
          # O comando de build pode não existir, então usamos --if-present
          npm run build --if-present
          echo "Build concluído!"
          
  health-check:
    name: "Nível 1: Health Check"
    runs-on: ubuntu-latest
    needs: [basic-setup, build]
    
    steps:
      - name: "Checkout do código"
        uses: actions/checkout@v4
        
      - name: "Setup Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: "Instalar dependências"
        run: npm ci
        
      - name: "Iniciar servidor em background"
        run: |
          echo "Iniciando servidor..."
          npm start &
          SERVER_PID=$!
          echo "SERVER_PID=$SERVER_PID" >> $GITHUB_ENV
          sleep 10
          
      - name: "Verificar health endpoint"
        run: |
          echo "Verificando health check..."
          curl -f http://localhost:3000/health || exit 1
          echo "Health check passou!"
          
      - name: "Parar servidor"
        if: always()
        run: |
          if [ ! -z "$SERVER_PID" ]; then
            kill $SERVER_PID || true
          fi
          
  challenge-complete:
    name: "Nível 1: Desafio Concluído!"
    runs-on: ubuntu-latest
    needs: [basic-setup, build, health-check]
    if: success()
    
    steps:
      - name: "Gerar certificado"
        run: |
          mkdir -p certificates
          cat > certificates/level-1-certificate.md << EOF
          # Certificado de Conclusão - Nível 1
          
          **Descomplicando Github Actions - GitHub Actions Edition**
          
          ---
          
          Este certificado atesta que **${{ github.actor }}** concluiu com sucesso:
          
          ## Nível 1: Primeiro Contato
          
          **Competências desenvolvidas:**
          - Configuração de workflow básico
          - Uso de actions do marketplace
          - Definição de jobs e steps
          - Variáveis de ambiente
          - Build e health check automatizados
          
          **Data de conclusão:** $(date)
          **Repositório:** ${{ github.repository }}
          **Workflow:** ${{ github.run_id }}
          
          ---
          
          **Badge conquistado:** First Steps
          
          **Próximo desafio:** Nível 2 - Testing Master
          
          ---
          
          *Certificado gerado automaticamente pelo GitHub Actions*
          *LINUXtips*
          EOF
          
      - name: "Upload do certificado"
        uses: actions/upload-artifact@v4
        with:
          name: level-1-certificate
          path: certificates/
          retention-days: 30